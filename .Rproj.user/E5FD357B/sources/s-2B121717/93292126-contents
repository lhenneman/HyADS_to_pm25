# https://gasp-pgh.org/wp-content/uploads/2014/05/U.-S.-Steel-Clairton-Works.pdf
# https://region.pittsburghquarterly.com/news/last-coke-works/
# https://www.wsj.com/articles/pittsburgh-air-quality-problem-recalls-the-bad-old-days-11552388400?mod=article_inline
# https://www.wsj.com/news/author/kris-maher
library( arepa)
library( hyspdisp)
library( raster)
library( sf)
library( openxlsx)
library( parallel)
library( ggplot2)

## -------------------------------------------------------------------- ##
##      Functions                                                       ##
## -------------------------------------------------------------------- ##
crosswalkin <- data.table( read.xlsx( xlsxFile = "https://www.udsmapper.org/docs/zip_to_zcta_2017.xlsx"))
setnames( crosswalkin,
          old = "ZIP_CODE",
          new = "ZIP")

data( ZCTApop2017)
ZCTApop2017[, ZCTA := formatC( Id2, format = 'd', flag = '0', width = 5)]
crosswalkin <- merge( ZCTApop2017, crosswalkin,
                      by = 'ZCTA')

# read zcta shapefile and crosswalk
zcta_dir <- file.path('~', 'Desktop', 'run_hyspdisp', 'zcta_500k')
zcta_file <- file.path( zcta_dir, 'cb_2017_us_zcta510_500k.zip')
dir.create( zcta_dir,
            recursive = T,
            showWarnings = F)

# Download the file if it is not present
zcta_file_url <- 'ftp://ftp2.census.gov/geo/tiger/GENZ2017/shp/cb_2017_us_zcta510_500k.zip'
if( !file.exists( zcta_file)){
  download.file( url = zcta_file_url,
                 destfile = zcta_file)
  unzip( zcta_file, exdir = zcta_dir)
}

# Load the ZCTA shapefile using the shapefile command
zcta_shapefile <- file.path( zcta_dir, 'cb_2017_us_zcta510_500k.shp')
zcta <- shapefile( x = zcta_shapefile)


p4s <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m"
zcta.trans <- spTransform( x = zcta,
                           CRSobj = p4s)


# Download the PBL file from NCAR for 2013 - https://www.esrl.noaa.gov/psd/repository/entry/show?entryid=synth%3Ae570c8f9-ec09-4e89-93b4-babd5651e7a9%3AL05BUlIvTW9udGhsaWVzL21vbm9sZXZlbC9ocGJsLm1vbi5tZWFuLm5j
Sys.setenv(TZ='UTC')
hpbl_file_NARR <- '~/Dropbox/Harvard/RFMeval_Local/Pittsburgh_CokePlant/hpbl.mon.mean.nc'
hpbl_rasterin <- brick( x = hpbl_file_NARR,
                        varname = 'hpbl')

# define the unit
units.run <- data.table( Latitude = 40.305873,
                         Longitude = -79.877105,
                         Height = 160,
                         ID = 'Clairton',
                         uID = 'Clairton')

proc_dir <- '~/Desktop/run_hyspdisp'
hysraw_dir <- '~/Dropbox/Harvard/RFMeval_Local/Pittsburgh_CokePlant/output_hysplit'
ziplink_dir <- '~/Dropbox/Harvard/RFMeval_Local/Pittsburgh_CokePlant/output_ziplinks'
meteo_dir <- '~/Desktop/run_hyspdisp/meteo'
rdata_dir <- '~/Dropbox/Harvard/RFMeval_Local/Pittsburgh_CokePlant/output_rdata'
exposure_dir <- '~/Desktop/run_hyspdisp/exposure_data'

metfiles.vignette <- c( paste0( 'RP', 2017, c( formatC( 11:12, width = 2, flag = '0')), '.gbl'),
                        paste0( 'RP', 2018, c( formatC( 1:12, width = 2, flag = '0')), '.gbl'),
                        paste0( 'RP', 2019, c( formatC( 1:5, width = 2, flag = '0')), '.gbl'))


dir.create( meteo_dir,
            recursive = T,
            showWarnings = F)
metfiles.vignette <- metfiles.vignette[!(metfiles.vignette %in% list.files(meteo_dir))]
if( length( metfiles.vignette) > 0)
  get_met_reanalysis(files = metfiles.vignette,
                     path_met_files = meteo_dir)


# input references combine
input_refs <- define_inputs( units = units.run,
                             startday = '2017-12-01',
                             endday = '2019-04-30')



hysp_raw <- mclapply( X = 1:nrow( input_refs),
                      FUN = hyspdisp_fac_model_parallel,
                      run_ref_tab = input_refs,
                      zcta2 = zcta.trans,
                      crosswalk = crosswalkin,
                      hpbl_raster = hpbl_rasterin,
                      prc_dir = proc_dir,
                      hyo_dir = hysraw_dir,
                      met_dir = meteo_dir,
                      keep.hysplit.files = FALSE,
                      overwrite = F,
                      mc.cores = detectCores() - 1)


# zip links for each yearmon, read different pbl file for each
yearmons <- c( paste0( 2018, 1:12), paste0( 2019, 1:4))
linked_zips1 <- lapply( yearmons,
                        hyspdisp_zip_link,
                        unit = units.run[1],
                        hpbl_raster = hpbl_rasterin,
                        zcta2 = zcta.trans,
                        crosswalk = crosswalkin,
                        prc_dir = proc_dir,
                        zpc_dir = ziplink_dir,
                        hyo_dir = hysraw_dir,
                        overwrite = F)
linked_grid1 <- lapply( yearmons,
                        hyspdisp_grid_link,
                        unit = units.run[1],
                        p4s = p4s,
                        hpbl_raster = hpbl_rasterin,
                        prc_dir = proc_dir,
                        zpc_dir = ziplink_dir,
                        hyo_dir = hysraw_dir,
                        overwrite = F)

# combine into single data.frame
combined_ziplinks2018 <- combine_monthly_ziplinks( month_YYYYMMs = yearmons[1:12],
                                                   zpc_dir = ziplink_dir,
                                                   rda_dir = rdata_dir)
combined_gridlinks2018 <- combine_monthly_gridlinks( month_YYYYMMs = yearmons[1:12],
                                                     zpc_dir = ziplink_dir,
                                                     rda_dir = rdata_dir)
combined_ziplinks2019 <- combine_monthly_ziplinks( month_YYYYMMs = yearmons[13:16],
                                                   zpc_dir = ziplink_dir,
                                                   rda_dir = rdata_dir)
combined_gridlinks2019 <- combine_monthly_gridlinks( month_YYYYMMs = yearmons[13:16],
                                                   zpc_dir = ziplink_dir,
                                                   rda_dir = rdata_dir)
combined_ziplinks.dt2018 <- rbindlist( combined_ziplinks2018,
                                       idcol = 'map.id')
combined_ziplinks.dt2019 <- rbindlist( combined_ziplinks2019,
                                       idcol = 'map.id')
combined_ziplinks.dt <- rbind( combined_ziplinks.dt2018, combined_ziplinks.dt2019)

combined_gridlinks <- brick( c( combined_gridlinks2018, combined_gridlinks2019))

combined_ziplinks.dt[, `:=` ( ZIP = formatC( as( ZIP, 'numeric'), format = 'd', flag = '0', width = 5),
                              year = as( gsub( '.*\\.', '', map.id), 'numeric'),
                              month = as( gsub( 'MAP|\\..*', '', map.id), 'numeric'),
                              map.id = NULL)]

# weight by emissions
# April peak: 135,241 lbs / day
# After control: 3,160 pounds / day
# from Dec 24 - May 11: 9.3 million pounds / yr
# typical: 1.1 million pounds / yr
monthly.typical.max.ton <- 3160 * 30 / 2000
monthly.typical.min.ton <- 1.1e6 * 30 / 2000 / 365
monthly.noscrub.max.ton <- 135241 * 30 / 2000
monthly.noscrub.min.ton <- 9.3e6 * 30 / 2000 / 365

combined_ziplinks.dt[, `:=` ( HyADS.typical.max = monthly.typical.max.ton * Clairton,
                              HyADS.typical.min = monthly.typical.min.ton * Clairton,
                              HyADS.noscrub.max = monthly.noscrub.max.ton * Clairton,
                              HyADS.noscrub.min = monthly.noscrub.min.ton * Clairton)]

combined_ziplinks.dt.m <- melt( combined_ziplinks.dt[, .( ZIP, year, month,
                                                          HyADS.typical.max, HyADS.typical.min,
                                                          HyADS.noscrub.max, HyADS.noscrub.min)],
                                id.vars = c( 'ZIP', 'year', 'month'),
                                value.name = 'HyADS')


# link with ZIP code location data
ZIP <- get_zip_codes()
setnames(ZIP, "zip", "ZIP")
combined_ziplinks.dt.m <- merge( ZIP, combined_ziplinks.dt.m, by = 'ZIP')


# convert to PM2.5
load( '~/Dropbox/Harvard/RFMeval_Local/Comparisons_Intermodel/evaluate_RFMs_output/adjust_hyads_to_ddm.RData')
load( '~/Dropbox/Harvard/RFMeval_Local/Comparisons_Intermodel/evaluate_RFMs_output/adjust_hyads_to_ddm_month.RData')

combined_ziplinks.dt <- merge( combined_ziplinks.dt.m,
                               hys_cmaq_mon[[4]][year == 2005, # & State.zip %in% c( 'PA', 'NY', 'NJ', 'MD', 'OH', 'WV', 'VA', 'MA', 'DE', 'CT', 'VT'),
                                                 .( month, State.zip, slope, slope_CI_low, slope_CI_high)],
                               #   intercept, intercept_CI_low, intercept_CI_high)],
                               by = c( 'month', 'State.zip'))

combined_ziplinks.dt[, `:=` ( date = as.Date( paste( year, month, '01', sep = '-')),
                              # pm25 = (HyADS - intercept) / (slope),
                              # pm25_low = (HyADS - intercept_CI_low) / (slope_CI_low),
                              # pm25_high = (HyADS - intercept_CI_high) / (slope_CI_high),
                              pm25 = (HyADS) / (slope),
                              pm25_low = (HyADS) / (slope_CI_low),
                              pm25_high = (HyADS) / (slope_CI_high))]


# make some plots
plot( combined_ziplinks.dt$variable, combined_ziplinks.dt$pm25)
combined_ziplinks.dt[City.zip == 'Pittsburgh']
ggplot( combined_ziplinks.dt[ ZIP == '15201'],
        aes( color = variable,
             y = HyADS,
             # group = ZIP,
             x = date)) +
  # facet_wrap( . ~ variable, nrow = 4) +
  geom_line() +
  theme_bw()


zip_exp_ann_sf <- data.table( merge( combined_ziplinks.dt,
                                     zips_crosswalk.sf,
                                     by = c('ZIP')))

for( d in as( unique( zip_exp_ann_sf$date), 'character')){
  month.plot <- month.name[month(d)]
  month.num <- formatC( month(d), width = 2, flag = '0')
  year.plot <- year( d)
  zip_exp_ann_plot.typ <- plot_hyspdisp(hyspdisp_out.sf = zip_exp_ann_sf[date == d &
                                                                           variable == 'HyADS.typical.max'],
                                        legend.lims = c( 0, 0.2),
                                        longitude.lims = c( -73.5, -82),
                                        latitude.lims = c( 38.5,43),
                                        legend.pos = c( 0.15, 0.9),
                                        metric = 'pm25',
                                        plot.title = paste(month.name[month(d)], year.plot),
                                        legend.title = expression( 'HyADS '*PM[2.5]),
                                        facility.loc = data.table( x = units.run[, Longitude],
                                                                   y = units.run[, Latitude]))

  zip_exp_ann_plot.ns <- plot_hyspdisp(hyspdisp_out.sf = zip_exp_ann_sf[date == d &
                                                                          variable == 'HyADS.noscrub.max'],
                                       legend.lims = c( 0, 0.2),
                                       longitude.lims = c( -73.5, -82),
                                       legend.pos = c( 0.15, 0.9),
                                       latitude.lims = c( 38.5,43),
                                       metric = 'pm25',
                                       plot.title = paste(month.name[month(d)], year.plot),
                                       legend.title = expression( 'HyADS '*PM[2.5]),
                                       facility.loc = data.table( x = units.run[, Longitude],
                                                                  y = units.run[, Latitude]))

  out.loc <- '~/Dropbox/Harvard/RFMeval_Local/Pittsburgh_CokePlant/plots'
  zip_exp_ann_plot.typ.f <- file.path( out.loc, paste0(paste('Clairton_typical_hyads_pm25', year.plot, month.num, sep = '_'),
                                                       '.png'))
  zip_exp_ann_plot.ns.f <- file.path( out.loc, paste0(paste('Clairton_noscrub_hyads_pm25', year.plot, month.num, sep = '_'),
                                                       '.png'))

  ggsave( zip_exp_ann_plot.typ.f, zip_exp_ann_plot.typ,
          width = 10, height = 6, units = 'in', scale = 0.8)
  ggsave( zip_exp_ann_plot.ns.f, zip_exp_ann_plot.ns,
          width = 10, height = 6, units = 'in', scale = 0.8)
}



