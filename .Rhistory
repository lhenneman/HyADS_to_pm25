state_exposurer(
month.n = 1,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]
)
## need a function
# inputs - filename of grid w/ unit or summed impacts
#        - model
#        - covariate raster
#        - 'x' name in the raster from model
#
# output - data table of state, pop-wgted impact for all input units
state_exposurer <- function(
month.n,
fstart,
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),],
ddm.m = ddm.m.all,
mets.m = mets.m.all,
emiss.m = d_nonegu.r,
idwe.m = idwe.m,
hyads.m = hyads.m.all,
grid_pop.r = grid_popwgt.r,
state_pops = copy( us_states.pop.dt)
){
month.N <- formatC( month.n, width = 2, flag = '0')
name.m <- paste0( 'X', year.m, '.', month.N, '.01')
model.m <- paste0( 'X2005.', month.N, '.01')
popyr.name <- paste0( 'X', year.m)
fname <- paste0( fstart, year.m, '_', month.n, '.csv')
# create prediction dataset
ddm.use.p <- ddm.m[[name.m]]
mets.use.p <- mets.m[[name.m]]
idwe.use.p <- idwe.m[[name.m]]
hyads.use.p <- hyads.m[[name.m]]
# fix names
names( ddm.use.p)   <- 'cmaq.ddm'
names( hyads.use.p) <- 'hyads'
names( idwe.use.p) <- 'idwe'
# rename population raster
grid_pop.r <- grid_pop.r[[popyr.name]]
names( grid_pop.r) <- 'pop'
dat.s <- project_and_stack( ddm.use.p,   hyads.use.p,   idwe.use.p,
mets.use.p, emiss.m, grid_pop.r, mask.use = mask.use)
# assign state names to raster
mask.r <- rasterize( mask.use[,'state_abbr'], dat.s[[1]])
mask.a <- levels( mask.r)[[1]]
dat.s$ID <- mask.r
# read in, rasterize new x file
x.in <- fread( fname, drop = c( 'V1', 'yearmon'))
x.r <- rasterFromXYZ( x.in, crs = p4s)
x.n <- names( x.in)[!(names( x.in) %in% c( 'x', 'y'))]
names( x.r) <- x.n
x.proj <-  project_and_stack( dat.s[[1]], x.r, mask.use = mask.use)
# pick out the appropriate model
model.use <- model.dataset[ model.name, model.m][[1]]
# do the predictions
pred_popwgt.r <- brick( lapply( x.n, function( n){
# assign unit to prediction dataset
dat.use <- copy( dat.s)
dat.use[[name.x]] <- x.proj[[n]]
# set up the dataset
dat.coords <- coordinates( dat.use)
dat_raw.dt <- data.table( cbind( dat.coords, values( dat.use)))
# do the predictions
dat.pred <- predict( model.use, newdata = dat_raw.dt)
# rasterize
dats.r <- rasterFromXYZ( data.table( dat.coords, dat.pred), crs = p4s)
# multiply by population
dats.r <- dats.r * dat.use[['pop']]
names( dats.r) <- n
dats.r
}))
# calculate population-weighted by state
pred_popwgt.r$ID <- mask.r
pred_popwgt.dt <- data.table( values( pred_popwgt.r))
pred_popwgt.dt.m <- na.omit( melt( pred_popwgt.dt, id.vars = 'ID', variable.name = 'uID'))
pred_popwgt.dt.s <- pred_popwgt.dt.m[, .( mean_popwgt = mean( value)), by = .( ID, uID)]
# now just divide by each state's total population
setnames( state_pops, popyr.name, 'pop_amnt')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, mask.a, by = 'ID')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, state_pops[, .( state_abbr, pop_amnt)],
by = 'state_abbr')
pred_popwgt.dt.s[, popwgt := mean_popwgt / pop_amnt]
return( pred_popwgt.dt.s[, .( state_abbr, uID, popwgt)])
}
#idwe_exp_jan <-
state_exposurer(
month.n = 1,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]
)
month.n
year.m
model.dataset
name.x
model.name
mask.use
mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]
preds.mon.idwe06w05
mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]
ddm.m.all
mets.m.all
d_nonegu.r
idwe.m
hyads.m.all
grid_popwgt.r
copy( us_states.pop.dt)
## need a function
# inputs - filename of grid w/ unit or summed impacts
#        - model
#        - covariate raster
#        - 'x' name in the raster from model
#
# output - data table of state, pop-wgted impact for all input units
state_exposurer <- function(
month.n,
fstart,
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),],
ddm.m = ddm.m.all,
mets.m = mets.m.all,
emiss.m = d_nonegu.r,
idwe.m = idwe.m,
hyads.m = hyads.m.all,
grid_pop.r = grid_popwgt.r,
state_pops = copy( us_states.pop.dt)
){
month.N <- formatC( month.n, width = 2, flag = '0')
name.m <- paste0( 'X', year.m, '.', month.N, '.01')
model.m <- paste0( 'X2005.', month.N, '.01')
popyr.name <- paste0( 'X', year.m)
fname <- paste0( fstart, year.m, '_', month.n, '.csv')
# create prediction dataset
ddm.use.p <- ddm.m[[name.m]]
mets.use.p <- mets.m[[name.m]]
idwe.use.p <- idwe.m[[name.m]]
hyads.use.p <- hyads.m[[name.m]]
# fix names
names( ddm.use.p)   <- 'cmaq.ddm'
names( hyads.use.p) <- 'hyads'
names( idwe.use.p) <- 'idwe'
# rename population raster
grid_pop.r <- grid_pop.r[[popyr.name]]
names( grid_pop.r) <- 'pop'
dat.s <- project_and_stack( ddm.use.p,   hyads.use.p,   idwe.use.p,
mets.use.p, emiss.m, grid_pop.r, mask.use = mask.use)
# assign state names to raster
mask.r <- rasterize( mask.use[,'state_abbr'], dat.s[[1]])
mask.a <- levels( mask.r)[[1]]
dat.s$ID <- mask.r
# read in, rasterize new x file
x.in <- fread( fname, drop = c( 'V1', 'yearmon'))
x.r <- rasterFromXYZ( x.in, crs = p4s)
x.n <- names( x.in)[!(names( x.in) %in% c( 'x', 'y'))]
names( x.r) <- x.n
x.proj <-  project_and_stack( dat.s[[1]], x.r, mask.use = mask.use)
# pick out the appropriate model
model.use <- model.dataset[ model.name, model.m][[1]]
# do the predictions
pred_popwgt.r <- brick( lapply( x.n, function( n){
# assign unit to prediction dataset
dat.use <- copy( dat.s)
dat.use[[name.x]] <- x.proj[[n]]
# set up the dataset
dat.coords <- coordinates( dat.use)
dat_raw.dt <- data.table( cbind( dat.coords, values( dat.use)))
# do the predictions
dat.pred <- predict( model.use, newdata = dat_raw.dt)
# rasterize
dats.r <- rasterFromXYZ( data.table( dat.coords, dat.pred), crs = p4s)
# multiply by population
dats.r <- dats.r * dat.use[['pop']]
names( dats.r) <- n
dats.r
}))
# calculate population-weighted by state
pred_popwgt.r$ID <- mask.r
pred_popwgt.dt <- data.table( values( pred_popwgt.r))
pred_popwgt.dt.m <- na.omit( melt( pred_popwgt.dt, id.vars = 'ID', variable.name = 'uID'))
pred_popwgt.dt.s <- pred_popwgt.dt.m[, .( mean_popwgt = mean( value)), by = .( ID, uID)]
# now just divide by each state's total population
setnames( state_pops, popyr.name, 'pop_amnt')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, mask.a, by = 'ID')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, state_pops[, .( state_abbr, pop_amnt)],
by = 'state_abbr')
pred_popwgt.dt.s[, popwgt := mean_popwgt / pop_amnt]
return( pred_popwgt.dt.s[, .( state_abbr, uID, popwgt)])
}
#idwe_exp_jan <-
state_exposurer(
month.n = 1,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]
)
## need a function
# inputs - filename of grid w/ unit or summed impacts
#        - model
#        - covariate raster
#        - 'x' name in the raster from model
#
# output - data table of state, pop-wgted impact for all input units
state_exposurer <- function(
month.n,
fstart,
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),],
ddm.m = ddm.m.all,
mets.m = mets.m.all,
emiss.m = d_nonegu.r,
idwe.m. = idwe.m,
hyads.m = hyads.m.all,
grid_pop.r = grid_popwgt.r,
state_pops = copy( us_states.pop.dt)
){
month.N <- formatC( month.n, width = 2, flag = '0')
name.m <- paste0( 'X', year.m, '.', month.N, '.01')
model.m <- paste0( 'X2005.', month.N, '.01')
popyr.name <- paste0( 'X', year.m)
fname <- paste0( fstart, year.m, '_', month.n, '.csv')
# create prediction dataset
ddm.use.p <- ddm.m[[name.m]]
mets.use.p <- mets.m[[name.m]]
idwe.use.p <- idwe.m.[[name.m]]
hyads.use.p <- hyads.m[[name.m]]
# fix names
names( ddm.use.p)   <- 'cmaq.ddm'
names( hyads.use.p) <- 'hyads'
names( idwe.use.p) <- 'idwe'
# rename population raster
grid_pop.r <- grid_pop.r[[popyr.name]]
names( grid_pop.r) <- 'pop'
dat.s <- project_and_stack( ddm.use.p,   hyads.use.p,   idwe.use.p,
mets.use.p, emiss.m, grid_pop.r, mask.use = mask.use)
# assign state names to raster
mask.r <- rasterize( mask.use[,'state_abbr'], dat.s[[1]])
mask.a <- levels( mask.r)[[1]]
dat.s$ID <- mask.r
# read in, rasterize new x file
x.in <- fread( fname, drop = c( 'V1', 'yearmon'))
x.r <- rasterFromXYZ( x.in, crs = p4s)
x.n <- names( x.in)[!(names( x.in) %in% c( 'x', 'y'))]
names( x.r) <- x.n
x.proj <-  project_and_stack( dat.s[[1]], x.r, mask.use = mask.use)
# pick out the appropriate model
model.use <- model.dataset[ model.name, model.m][[1]]
# do the predictions
pred_popwgt.r <- brick( lapply( x.n, function( n){
# assign unit to prediction dataset
dat.use <- copy( dat.s)
dat.use[[name.x]] <- x.proj[[n]]
# set up the dataset
dat.coords <- coordinates( dat.use)
dat_raw.dt <- data.table( cbind( dat.coords, values( dat.use)))
# do the predictions
dat.pred <- predict( model.use, newdata = dat_raw.dt)
# rasterize
dats.r <- rasterFromXYZ( data.table( dat.coords, dat.pred), crs = p4s)
# multiply by population
dats.r <- dats.r * dat.use[['pop']]
names( dats.r) <- n
dats.r
}))
# calculate population-weighted by state
pred_popwgt.r$ID <- mask.r
pred_popwgt.dt <- data.table( values( pred_popwgt.r))
pred_popwgt.dt.m <- na.omit( melt( pred_popwgt.dt, id.vars = 'ID', variable.name = 'uID'))
pred_popwgt.dt.s <- pred_popwgt.dt.m[, .( mean_popwgt = mean( value)), by = .( ID, uID)]
# now just divide by each state's total population
setnames( state_pops, popyr.name, 'pop_amnt')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, mask.a, by = 'ID')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, state_pops[, .( state_abbr, pop_amnt)],
by = 'state_abbr')
pred_popwgt.dt.s[, popwgt := mean_popwgt / pop_amnt]
return( pred_popwgt.dt.s[, .( state_abbr, uID, popwgt)])
}
idwe_exp_jan <- state_exposurer(
month.n = 1,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]
)
idwe_exp_jan
## need a function
# inputs - filename of grid w/ unit or summed impacts
#        - model
#        - covariate raster
#        - 'x' name in the raster from model
#
# output - data table of state, pop-wgted impact for all input units
state_exposurer <- function(
month.n,
fstart,
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),],
ddm.m = ddm.m.all,
mets.m = mets.m.all,
emiss.m = d_nonegu.r,
idwe.m. = idwe.m,
hyads.m = hyads.m.all,
grid_pop.r = grid_popwgt.r,
state_pops = copy( us_states.pop.dt)
){
month.N <- formatC( month.n, width = 2, flag = '0')
name.m <- paste0( 'X', year.m, '.', month.N, '.01')
model.m <- paste0( 'X2005.', month.N, '.01')
popyr.name <- paste0( 'X', year.m)
fname <- paste0( fstart, year.m, '_', month.n, '.csv')
# create prediction dataset
ddm.use.p <- ddm.m[[name.m]]
mets.use.p <- mets.m[[name.m]]
idwe.use.p <- idwe.m.[[name.m]]
hyads.use.p <- hyads.m[[name.m]]
# fix names
names( ddm.use.p)   <- 'cmaq.ddm'
names( hyads.use.p) <- 'hyads'
names( idwe.use.p) <- 'idwe'
# rename population raster
grid_pop.r <- grid_pop.r[[popyr.name]]
names( grid_pop.r) <- 'pop'
dat.s <- project_and_stack( ddm.use.p,   hyads.use.p,   idwe.use.p,
mets.use.p, emiss.m, grid_pop.r, mask.use = mask.use)
# assign state names to raster
mask.r <- rasterize( mask.use[,'state_abbr'], dat.s[[1]])
mask.a <- levels( mask.r)[[1]]
dat.s$ID <- mask.r
# read in, rasterize new x file
x.in <- fread( fname, drop = c( 'V1', 'yearmon'))
x.r <- rasterFromXYZ( x.in, crs = p4s)
x.n <- names( x.in)[!(names( x.in) %in% c( 'x', 'y'))]
names( x.r) <- x.n
x.proj <-  project_and_stack( dat.s[[1]], x.r, mask.use = mask.use)
# pick out the appropriate model
model.use <- model.dataset[ model.name, model.m][[1]]
# do the predictions
pred_popwgt.r <- brick( lapply( x.n, function( n){
# assign unit to prediction dataset
dat.use <- copy( dat.s)
dat.use[[name.x]] <- x.proj[[n]]
# set up the dataset
dat.coords <- coordinates( dat.use)
dat_raw.dt <- data.table( cbind( dat.coords, values( dat.use)))
# do the predictions
dat.pred <- predict( model.use, newdata = dat_raw.dt)
# rasterize
dats.r <- rasterFromXYZ( data.table( dat.coords, dat.pred), crs = p4s)
# multiply by population
dats.r <- dats.r * dat.use[['pop']]
names( dats.r) <- n
dats.r
}))
# calculate population-weighted by state
pred_popwgt.r$ID <- mask.r
pred_popwgt.dt <- data.table( values( pred_popwgt.r))
pred_popwgt.dt.m <- na.omit( melt( pred_popwgt.dt, id.vars = 'ID', variable.name = 'uID'))
pred_popwgt.dt.s <- pred_popwgt.dt.m[, .( mean_popwgt = mean( value)), by = .( ID, uID)]
# now just divide by each state's total population
setnames( state_pops, popyr.name, 'pop_amnt')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, mask.a, by = 'ID')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, state_pops[, .( state_abbr, pop_amnt)],
by = 'state_abbr')
pred_popwgt.dt.s[, popwgt := mean_popwgt / pop_amnt]
pred_popwgt.dt.s[, name.m := name.m]
return( pred_popwgt.dt.s[, .( state_abbr, uID, name.m, popwgt)])
}
idwe_exp <- lapply( 1:12,
state_exposurer,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),])
idwe_exp <- rbindlist( lapply( 1:12,
state_exposurer,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]))
idwe_exp
idwe_exp11 <- rbindlist( lapply( 1:12,
state_exposurer,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2011,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]))
## need a function
# inputs - filename of grid w/ unit or summed impacts
#        - model
#        - covariate raster
#        - 'x' name in the raster from model
#
# output - data table of state, pop-wgted impact for all input units
state_exposurer <- function(
month.n,
fstart,
year.m = 2006,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),],
ddm.m = ddm.m.all,
mets.m = mets.m.all,
emiss.m = d_nonegu.r,
idwe.m. = idwe.m,
hyads.m = hyads.m.all,
grid_pop.r = grid_popwgt.r,
state_pops = copy( us_states.pop.dt)
){
month.N <- formatC( month.n, width = 2, flag = '0')
name.m <- paste0( 'X', year.m, '.', month.N, '.01')
model.m <- paste0( 'X2005.', month.N, '.01')
popyr.name <- paste0( 'X', year.m)
fname <- paste0( fstart, year.m, '_', month.n, '.csv')
# create prediction dataset
# ddm.use.p <- ddm.m[[name.m]]
mets.use.p <- mets.m[[name.m]]
idwe.use.p <- idwe.m.[[name.m]]
hyads.use.p <- hyads.m[[name.m]]
# fix names
# names( ddm.use.p)   <- 'cmaq.ddm'
names( hyads.use.p) <- 'hyads'
names( idwe.use.p) <- 'idwe'
# rename population raster
grid_pop.r <- grid_pop.r[[popyr.name]]
names( grid_pop.r) <- 'pop'
dat.s <- project_and_stack( #ddm.use.p,
hyads.use.p,   idwe.use.p,
mets.use.p, emiss.m, grid_pop.r, mask.use = mask.use)
# assign state names to raster
mask.r <- rasterize( mask.use[,'state_abbr'], dat.s[[1]])
mask.a <- levels( mask.r)[[1]]
dat.s$ID <- mask.r
# read in, rasterize new x file
x.in <- fread( fname, drop = c( 'V1', 'yearmon'))
x.r <- rasterFromXYZ( x.in, crs = p4s)
x.n <- names( x.in)[!(names( x.in) %in% c( 'x', 'y'))]
names( x.r) <- x.n
x.proj <-  project_and_stack( dat.s[[1]], x.r, mask.use = mask.use)
# pick out the appropriate model
model.use <- model.dataset[ model.name, model.m][[1]]
# do the predictions
pred_popwgt.r <- brick( lapply( x.n, function( n){
# assign unit to prediction dataset
dat.use <- copy( dat.s)
dat.use[[name.x]] <- x.proj[[n]]
# set up the dataset
dat.coords <- coordinates( dat.use)
dat_raw.dt <- data.table( cbind( dat.coords, values( dat.use)))
# do the predictions
dat.pred <- predict( model.use, newdata = dat_raw.dt)
# rasterize
dats.r <- rasterFromXYZ( data.table( dat.coords, dat.pred), crs = p4s)
# multiply by population
dats.r <- dats.r * dat.use[['pop']]
names( dats.r) <- n
dats.r
}))
# calculate population-weighted by state
pred_popwgt.r$ID <- mask.r
pred_popwgt.dt <- data.table( values( pred_popwgt.r))
pred_popwgt.dt.m <- na.omit( melt( pred_popwgt.dt, id.vars = 'ID', variable.name = 'uID'))
pred_popwgt.dt.s <- pred_popwgt.dt.m[, .( mean_popwgt = mean( value)), by = .( ID, uID)]
# now just divide by each state's total population
setnames( state_pops, popyr.name, 'pop_amnt')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, mask.a, by = 'ID')
pred_popwgt.dt.s <- merge( pred_popwgt.dt.s, state_pops[, .( state_abbr, pop_amnt)],
by = 'state_abbr')
pred_popwgt.dt.s[, popwgt := mean_popwgt / pop_amnt]
pred_popwgt.dt.s[, name.m := name.m]
return( pred_popwgt.dt.s[, .( state_abbr, uID, name.m, popwgt)])
}
idwe_exp11 <- rbindlist( lapply( 1:12,
state_exposurer,
fstart = '~/Dropbox/Harvard/RFMeval_Local/HyADS_to_pm25/RData/ampd_dists_sox_weighted',
year.m = 2011,
model.dataset = preds.mon.idwe06w05,
model.name = 'model.cv', #'model.gam'
name.x = 'idwe',
mask.use = mask.usa[ mask.usa$state_abbr %in% c( 'GA', 'KY'),]))
idwe_exp11
